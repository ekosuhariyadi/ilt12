plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'jacoco'
}

def jacocoExclusions =
        file("../buildSystem/jacoco-exclusion.list")
                .text
                .readLines()
                .findAll { !it.isEmpty() && !it.startsWith("#") }

jacoco {
    toolVersion = "0.8.7"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.codangcoding.ilt10"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0-native-mt'

    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "androidx.activity:activity-ktx:1.2.3"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.recyclerview:recyclerview:1.2.0"
    implementation 'com.google.android.material:material:1.3.0'

    implementation "androidx.paging:paging-runtime-ktx:3.0.0"

    implementation "androidx.room:room-runtime:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"
    implementation "androidx.room:room-ktx:2.3.0"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.12.3'

    implementation 'io.coil-kt:coil:1.2.1'

    implementation "io.github.reactivecircus.flowbinding:flowbinding-android:${flowbinding_version}"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0-native-mt'
    testImplementation 'com.willowtreeapps.assertk:assertk-jvm:0.24'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "io.mockk:mockk:1.11.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

task jacocoTestReport(type: JacocoReport) {
    dependsOn = ["testDebugUnitTest"]

    group = "Reporting"
    description "Generate Jacoco Coverage Reports"

    reports {
        html.enabled true
        xml.enabled true
    }

    classDirectories.setFrom(fileTree(
            dir: "${project.buildDir}/tmp/kotlin-classes/debug",
            excludes: jacocoExclusions
    ))
    sourceDirectories.setFrom(files("${project.projectDir}/src/main/java"))
    executionData.setFrom(fileTree("${project.buildDir}").include("/jacoco/*.exec"))
}

sonarqube {
    androidVariant "debug"

    properties {
        property "sonar.sources", "src/main/java"
        property "sonar.junit.reportPaths", "${project.buildDir}/test-results/testDebugUnitTest"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.exclusions", "${jacocoExclusions.join(",")}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
    }
}